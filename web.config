<configuration>
  <system.webServer>
    <webSocket enabled="false" />
    <handlers>
      <!-- Xác định rằng server.js là điểm vào của ứng dụng Node.js để iisnode xử lý -->
      <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
    </handlers>
    <rewrite>
      <rules>
        <!-- Không can thiệp vào các yêu cầu gỡ lỗi node-inspector -->
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^server.js\/debug[\/]?" />
        </rule>

        <!-- Rewrite cho nội dung tĩnh trong thư mục .next/static của Next.js -->
        <rule name="StaticContent">
          <action type="Rewrite" url=".next/static{REQUEST_URI}" />
        </rule>

        <!-- Các URL còn lại được map tới điểm vào ứng dụng Node.js -->
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True" />
          </conditions>
          <action type="Rewrite" url="server.js" />
        </rule>
      </rules>
    </rewrite>

    <!-- Đảm bảo thư mục 'node_modules' không bị truy cập trực tiếp -->
    <security>
      <requestFiltering>
        <hiddenSegments>
          <add segment="node_modules" />
        </hiddenSegments>
      </requestFiltering>
    </security>

    <!-- Đảm bảo các phản hồi lỗi được giữ nguyên -->
    <httpErrors existingResponse="PassThrough" />
    <iisnode node_env="production" />

    <!-- Uncomment dòng dưới nếu bạn muốn theo dõi thay đổi trong file -->
    <!-- <iisnode watchedFiles="web.config;*.js"/> -->
  </system.webServer>
</configuration>
